# import cvxpy
import numpy as np
import matplotlib.pyplot as plt
import japanize_matplotlib
# from scipy.integrate import odeint

# import cvxopt
# from cvxopt import matrix
import scipy.linalg
import scipy.signal
from l1sample import mpc_modeling_tool_v5
import random
import csv
import pandas as pd
import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
from torch.utils.data import Dataset
from sklearn.model_selection import train_test_split
from torchvision import datasets, transforms
from torch.utils.data import DataLoader, Dataset
import time
from operator import mul
from network import netC as Net1
from network import netR as Net2

# モデルの定義

# print(len(dataset)) #36300 =11*11*300

# optimizer = optim.Adam(net.parameters())
# fn_loss=nn.BCEWithLogitsLoss()
# losses=[]
# running_loss=0.0
# cntfile=[]
# cnt=0
# epoches=10
# batch_size=100

device1 = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model1 = Net1().to(device1)
device2 = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model2 = Net2().to(device2)

model1.load_state_dict(torch.load("./params/model_dualC.pth", map_location=device1))
model2.load_state_dict(torch.load("./params/model_dualR.pth", map_location=device2))


print("---------------------")
A = np.array([[0, -1],
                [2, 0]])
B = np.array([[2], [0]])

C = np.array([[1], [0]])
(nx, nu) = B.shape
Q = np.eye(nx)
R = np.eye(nu)

Ts = 0.05
Th = 3
N=int(Th/Ts)
# a=1 #L1差分ノルム
# b=0.5 #L1ノルム
# c=1 #L2ノルム

Ad, Bd, _, _, dt = scipy.signal.cont2discrete((A,B,C,0),Ts)

# # print(Ad)
# # print(Bd)

x0 = np.array([[1.28], [-1.89]]) # init state

simutime=1/Th
# simutime=10/3
itr=int(simutime*Th)
rx0 =[]
rx1 =[]
ru=[]
noiseLi=[]

xcurr = x0
ucurr = 0

output1 = []
output2 = []
t1 = time.time()
l2norm = 0
l1norm = 0

# noisedf = pd.read_csv('./dataset/noise.csv')
# noiseLi = noisedf.values.tolist()

for count in range(itr):

    # 分類
    data = [xcurr[0,0], xcurr[1,0]]
    data2 = [xcurr[0,0], xcurr[1,0]]
    data = torch.tensor(data, dtype=torch.float32)
    output = model1(data)
    # output = torch.sigmoid(output)
    output = output.detach().tolist()


    Signs = []
    for fm in range(0, 180, 3):
        cnt = [output[fm], output[fm+1], output[fm+2]]

        sign = cnt.index(max(cnt)) - 1
        # data2.append(sign) #カスケード
        Signs.append(sign)
    # 回帰
    data2 = torch.tensor(data2, dtype=torch.float32)
    output2 = model2(data2)
    output2 = output2.detach().tolist()
    for step in range(0, 60):
        output2[step] =abs(output2[step])

    ucurr = list(map(mul, output2, Signs))


    # u入力
    for horizon in range(N):
        ru.append(ucurr[horizon])
        rx0.append(xcurr[0])
        rx1.append(xcurr[1])
        l1norm += abs(ucurr[horizon])
        l2norm += (xcurr[0])**2

        #外乱生成
        noise = 0
        # print(noiseLi[count*N+horizon][0])
        # noise = noiseLi[count*N+horizon][0]
        # xcurr[0] += 0.5*noise
        # rate = (np.random.rand() <= 0.1)
        # if rate:
        #     noise = np.random.normal(0, 1)
        # noiseLi.append(noise)

        # xnext = Ad@xcurr + Bd*(ucurr[horizon]+noise) # x(i) → x(i+1)
        xnext = Ad@xcurr + Bd*ucurr[horizon]

        xcurr = xnext

t2 = time.time()
ru2 = [-0.9009271635697995, -0.9009262995968638, -0.9009253090776699, -0.9009241965553542, -0.9009229753001472, -0.9009216564341495, -0.9009202524901503, -0.9009187772889311, -0.9009172473872501, -0.9009156785460305, -0.9009140885657473, -0.9009124956202668, -0.9009109178681431, -0.900909374710436, -0.9009078876030917, -0.9009064674257657, -0.9009051423513814, -0.9009039250738411, -0.9009028329847374, -0.9009018915374228, -0.9009011030251621, -0.9009004809947958, -0.8962397253804164, -0.018484534032767928, 0.027122768468151176, 0.012133816212802412, 0.0096629648538398, 0.009868496667018244, 0.009264490518152643, 0.008516087764241322, 0.007214878839902782, 0.006872140182535808, 0.006002533789579403, 0.005630302243848495, 0.004930793593546048, 0.004577052365569368, 0.004103411060122684, 0.0037077355088041388, 0.0034113671531601614, 0.0030457733288326337, 0.002778682825160166, 0.0025305240489874284, 0.002298565833343362, 0.002089830465363771, 0.0019039736400798854, 0.001737891731410628, 0.0015890568928893754, 0.0014558309684774581, 0.0013370385186859165, 0.001231841282169858, 0.0011396732155430152, 0.0010592627635550417, 0.0009867002038901256, 0.0009193184197959665, 0.0008793382533840279, 0.0008534620440642412, 0.000751707829905243, 0.0008064518703096973, 0.0007485686805891271, 0.0007312869539752524]
rx02 = [1.28, 1.2713059152987674, 1.2562579491336447, 1.234931309990753, 1.207432586642713, 1.1738992154268044, 1.13449879334956, 1.0894282404508324, 1.0389128156137781, 0.9832049907396531, 0.9225831889142001, 0.8573503928721737, 0.7878326307147737, 0.714377346448252, 0.6373516634876019, 0.5571405498041965, 0.47414489388781456, 0.3887795011392368, 0.30147102070727616, 0.21265581313173748, 0.12277776944965191, 0.032286092664710386, -0.05836694733207108, -0.14872827416973466, -0.2383462694354836, -0.22685634232851132, -0.21423260604851382, -0.20053815298182337, -0.18584142686841743, -0.17021588072578617, -0.1537396097368467, -0.13649496093669958, -0.11856812164898105, -0.1000486887287719, -0.08102922076495106, -0.06160477548004942, -0.041872434639641146, -0.02193081884573576, -0.001879594639193436, 0.01818102362537527, 0.038150774642637365, 0.05792985125422116, 0.07741939927661123, 0.09652201156615407, 0.11514221485187864, 0.13318694690298172, 0.15056602164613458, 0.16719257990799336, 0.1829835235301392, 0.19785993068677807, 0.21174745032947676, 0.22457667378753274, 0.2362834816667504, 0.24680936431285222, 0.25610171423787537, 0.26411408904803085, 0.27080644355893363, 0.27614532993811086, 0.28010406487449296, 0.28266286293938814, 0.28380893547241276, 0.18361986700063493, 0.08251308167149224, -0.019006097192402233, -0.12043028515977176, -0.2212525725559575, -0.320969057955406, -0.4190813666391772, -0.5150991414304317, -0.6085424934589074, -0.6989444006056694, -0.7858530416409036, -0.8688340543889288, -0.9474727066343044, -1.0213759689190263, -0.9902577913736224, -0.9541903875646068, -0.9133540193831224, -0.8679527836084876, -0.8182135918494307, -0.7643850364586996, -0.7067361480891132, -0.6455550511006839, -0.5811475235389766, -0.4139187813842924, -0.2446213075097723, -0.17401792413801703, -0.10254481362249615, 0.06935749485923154, 0.2409131603373637, 0.4112647618325835, 0.57956089617744, 0.7449604332587246, 0.9066367199159745, 1.063781711485368, 1.1156933228423778, 1.162028791558906, 1.2025565368075093, 1.2370740042806763, 1.2654086785404477, 1.2874189452362583, 1.3029947988817097, 1.3120583926528617, 1.314564427460199, 1.3105003783497207, 1.2998865571016212, 1.2827760107136983, 1.2592542562768605, 1.2294388535678038, 1.1934788174950026, 1.151553873334564, 1.1038735584782127, 1.050676175182795, 0.9922275995553764, 0.9288199527265206, 0.8607701408531223, 0.7884182712477332, 0.7121259525504386, 0.6322744874388825, 0.5492629669091273, 0.463506275651975, 0.27551633099619166, 0.08614937858212679, -0.10364814127688701, -0.2929276363271583, -0.48074310336000087, -0.6661558562572657, -0.8482392174666613, -1.0260831494592586, -1.1987988030215408, -1.1656895846549689, -1.1267543464803729, -1.0821876835870645, -1.032212336457769, -0.9770780777301772, -0.9170604638540302, -0.8524594578828506, -0.7835979302834942, -0.7108200452563502, -0.6344895406312282, -0.5549879099358705, -0.4727124957229589, -0.3880745036850103, -0.30149694748244993, -0.21341253455644077, -0.12426150349300147, -0.03448942374708691, 0.05545503127657136, 0.14512232665590843, 0.2340643126897613, 0.3218364647128851, 0.4080001047933404, 0.4921245942083934, 0.5737894857411143, 0.6525866250406769, 0.7281221905439326, 0.8000186617629013, 0.8679167061008413, 0.8315602872692285, 0.7910477991298243, 0.7465817197363742, 0.6983842868636184, 0.646696387281336, 0.5917763528222597, 0.5338986692610143, 0.4733526044569931, 0.41044076261760243, 0.34547757190754447, 0.2787877129629434, 0.21070449616447035, 0.14156819577972052, 0.07172434930066209, 0.0015220304759259867, -0.06868789533082136, -0.1385545247368487, -0.20772867012634677, -0.2758646048611543, -0.34262179119380504, -0.40766658224692987, -0.47067388955266143, -0.5313288078178191, -0.48941150129691124, -0.4450481567068938, -0.39846049836248487, -0.3498813675139598, -0.2995535586259049, -0.24772860591063184, -0.19466552618105876, -0.14062952430617376, -0.0858906677391082, -0.030722536742417705, 0.02459914294336657, 0.07979787815410788, 0.134597790191953, 0.1887249936441701, 0.24190896523971278, 0.29388389590207914, 0.34439001924101764, 0.3931749098433886, 0.43999474487443124, 0.48461552268405794, 0.5268142323276823, 0.5663799681564138, 0.603114983905988, 0.6368356810161858, 0.667373526241201, 0.6945758939648171, 0.7183068290105709, 0.7384477261344423, 0.7548979228040217, 0.767575202301493, 0.7764162046359663, 0.6814600557139344, 0.5830980259851853, 0.4818217207116179, 0.3781373104624596, 0.2725630013157665, 0.16562644490744916, 0.05786210127218412, -0.050191432343486754, -0.1579941133454982, -0.2650071528803308, -0.3706957086569887, -0.4745315580443858, -0.5759957380842203, -0.6745811392247741, -0.7697950398123689, -0.8611615686733018, -0.948224083478482, -1.0305474530038952, -1.1077202318803525, -1.1793567169633004, -1.2450988750451297, -1.3046181322754358, -1.3576170163458547, -1.4038306432319758, -1.4430280410617127, -1.4750133044935532, -1.4996265738351986, -1.5167448340090397, -1.526282529371306, -1.4282753038145533, -1.323129676816393, -1.2113711574949315, -1.0935583056553293, -0.9702799401542469, -0.8421521960320626, -0.7098154451210719, -0.5739310955202114, -0.43517828593226837, -0.2942504913850029, -0.15185205730050833, -0.008694679235242225, 0.13450615411530373, 0.27703473686972824, 0.4181787229993219, 0.557232686574404, 0.693501647424578, 0.6264711695969102, 0.5563096408520225, 0.4833677226881473, 0.40800997275909934, 0.33061302284537497, 0.2515636964797687, 0.17125707563545717, 0.09009452613908364, 0.00848169167766416, -0.07317353357489742, -0.15446304357904092, -0.23498056010966845, -0.31432366330099804, -0.3920958029076574, -0.46790828022990233, -0.5413821907974612, -0.6121503181026339, -0.6798589689179229, -0.744169741025433, -0.8047612145230739, -0.8613305582545571, -0.9135950433343841, -0.9612934562033539, -0.9042707166547348, -0.8427285071062135, -0.776974410413963, -0.7073370600965723, -0.6341644978519927, -0.5578224340740141, -0.4786924200620653, -0.3971699410594835, -0.31366243965108753, -0.22858727939895124, -0.14236965889395542, -0.05544048664851636, 0.03176577254839988, 0.11881326905023812, 0.2052669466932181, 0.2906947171709374, 0.3746696195758695, 0.45677195431454765, 0.536591380731304, 0.6137289679568139, 0.5878825012339549, 0.5590978465560295, 0.5275188672383903, 0.4933033923990493, 0.4566224281418433, 0.41765930288211806, 0.3766087510865223, 0.33367594000630346, 0.2890754442684121, 0.24303017344932304, 0.1957702579914708, 0.14753189903039565, 0.09855618788106973, 0.04908790108351202, -0.0006257229700455391, -0.050336219712125166, -0.09979514020529226, -0.14875529286932698, -0.19697197892422869, -0.24420421537441173, -0.2902159394217192, -0.3347771882876981, -0.3776652485484824, -0.41866576923800336, -0.4575738331563298, -0.4941949810288281, -0.5283461833974792, -0.5598567553869211, -0.5885692097732915, -0.6143400440923031, -0.6370404578526516, -0.5566403087726626, -0.4734581176228595, -0.3879096220916399, -0.30042238646032937, -0.21143366467238497, -0.12138821497447214, -0.030736077051656527, 0.0600696772335948, 0.1505752082569834, 0.24032817688515923, 0.32888000522917127, 0.4157881185995308, 0.5006181574577818, 0.5829461483094283, 0.6623606226882761, 0.7384646736416808, 0.8108779394385588, 0.8792385045857547, 0.9432047086516424, 1.0024568538566092, 1.0566988028960276, 1.1056594590099287, 1.1490941209021113, 1.186785705736913, 1.2185458341012092, 1.2442157715090851, 1.2636672217436253, 1.2768029680707587, 1.283557359120427, 1.183979949509165, 1.0784851063641843, 0.9676000841569138, 0.851879077026425, 0.7319004489631161, 0.6082638431934844, 0.4815871852130412, 0.35250359444596596, 0.22165821996676316, 0.089705016098727, -0.042696525995497385, -0.17488467439601624, -0.30619876370690824, -0.4359824970070472, -0.5635872259676504, -0.688375192742797, -0.8097227174302166, -0.7271899401766444, -0.6410227279487571, -0.5516517373225851, -0.45952363709272426, -0.3650988758587679, -0.26884938074141657, -0.17125619872989256, -0.0728070924490078, 0.02600589763795738, 0.12468891240665717, 0.2227487423386003, 0.31969529254139384, 0.4150440322023445, 0.5083184162332508, 0.5990522670032078, 0.6867921042557192, 0.7710994115653879, 0.8515528280066179, 0.927750254080555, 0.9993108613750119, 0.9659603084157495, 0.9277819659963447, 0.8849666463039362, 0.8377283367532684, 0.7863031304953507, 0.7309480464434805, 0.6719397447140443, 0.6095731439022144, 0.5441599471032847, 0.47602708404646765, 0.40551507712723756, 0.3329763395046573, 0.2587734137696547, 0.18327715998723856, 0.10686490216867066, 0.02991854243736969, -0.047177347686208834, -0.12403744934111778, -0.20027762211760922, -0.27551682395902405, -0.34937901557837, -0.4214950398714719, -0.49150446693354344, -0.6589740829554607, -0.6233168262014434, -0.58454428367673, -0.5428502373312752, -0.49844307054868586, -0.45154472666336154, -0.40238959970612864, -0.351223362922325, -0.29830174091730743, -0.24388923156609588, -0.18825778407494342, -0.13168543980177158, -0.07445494262853711, -0.01685232583077366, 0.04083451749298248, 0.09831727328700778, 0.1553086475081158, 0.21152380199744378, 0.2666817780779328, 0.3205069007624803, 0.3727301565546481, 0.4230905379557935, 0.4713363479588874, 0.5172264580092679, 0.5605315131451465, 0.6010350782946734, 0.6385347200004658, 0.6728430181652291, 0.7037885027618488, 0.7312165108263574, 0.7549899594505933, 0.6750733434136792, 0.5917827668281159, 0.5055345090837144, 0.41675963181527115, 0.3259018244922892, 0.2334151868958299, 0.13976195956549115, 0.045410213559549883, -0.04916848892534357, -0.14350145138289136, -0.2371172054950593, -0.32954786749160503, -0.4203314765943339, -0.5090143038587319, -0.5951531198735774, -0.6783174099847562, -0.758091525971776, -0.83407676342308, -0.9058933544276083, -0.9731823656233021, -1.0356074921162606, -1.0928567383046925, -1.1446439772070425, -1.1907103805008992, -1.2308257121254733, -1.2647894789823217, -1.292431932983216, -1.3136149194370002, -1.3282325675352726, -1.2362951319883804, -1.1381787959671734, -1.03437393677679, -0.9253993624890987, -0.81179971898301, -0.694142767849571, -0.5730165487666502, -0.4490264405254264, -0.3227921353974286, -0.19494454196398853, -0.06612263188750786, 0.06302975361588445, 0.19186712164130065, 0.31974555371506586, 0.44602592404581315, 0.5700770938221502, 0.4914456905970227, 0.4103580825934733, 0.32721953894715583, 0.24244557919986764, 0.1564598965673618, 0.06969224035581553, -0.01742373188953894, -0.1044526217688378, -0.19095946611265613, -0.2765119108918328, -0.3606823720870288, -0.44305017271817243, -0.5232036453530953, -0.6007421895871953, -0.6752782742110153, -0.7464393740590675, -0.8138698318596964, -0.8772326357806081, -0.9362111037860404, -0.890593778889778, -0.8405253401935662, -0.7862560255990223, -0.7280570686368888, -0.6662193428643555, -0.6010519081031591, -0.5328804657842423, -0.4620457311190299, -0.3889017302330773, -0.31381403077287395, -0.2371579148290836, -0.1593165033077979, -0.0806788411240418, -0.0016379527875735322, 0.07741112190099966, 0.156073302226362, 0.23395544113911826, 0.31066829017212066, 0.38582844487200574, 0.4590602610228346, 0.5299977320847113, 0.5982863184640959, 0.6635847194732702, 0.7255665791228532, 0.7839221172219513, 0.7384429901363262, 0.6892731862665348, 0.6366584522119058, 0.5808617520469505, 0.5221619530487404, 0.4608524319413988, 0.39723960862357943, 0.33164141470724207, 0.26438570452183946, 0.19580861652558634, 0.12625289331334003, 0.056066168617554174, -0.014400770136267185, -0.08479573503601184, -0.15476689788891745, -0.22396454862968201, -0.2920428431423493, -0.35866153176050003, -0.4234876598068486, -0.48619723167308965, -0.5464768301230611, -0.6040251827260815, -0.6585546675915566, -0.7097927508793201, -0.7574833489011511, -0.8013881080057949, -0.7413709083532131, -0.6776483984241936, -0.6105390580352762, -0.5403782941005796, -0.4675167642958782, -0.39231862450063854, -0.3151597087771538, -0.2364256509830893, -0.15650995740546397, -0.0758120400488837, 0.005264779592512175, 0.08631528630240842, 0.16693439637433785, 0.2467191821864299, 0.3252708860002273, 0.40219691291877147, 0.47711279304331783, 0.5496441030219837, 0.6194283373865894, 0.6861167203249049, 0.7493759488332162, 0.8088898585370782, 0.8643610038546206, 0.9155121446048826, 0.9620876316312303, 1.0038546845146261, 1.0406045549908454, 1.072153570256978, 1.0983440509528546, 1.1190450992294043, 1.1341532529652412, 1.143593002861761, 1.147317169832349]


fig, ax = plt.subplots(1)
# time= np.arange(0, simutime, Ts)

# 目盛を内側に
plt.tick_params(direction='in')
plt.ylim(-1.0, 0.5)
# plt.ylim(-2,2)


plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams["mathtext.fontset"] = "stix"
plt.rcParams["font.size"] = 10
plt.rcParams['axes.linewidth'] = 1.0# 軸の線幅edge linewidth。囲みの太さ


plt.plot(ru, ls="-", color="r", linewidth="2",  label="Dual-Net")
# plt.plot(rx02, ls="-.", color="g", linewidth="2",  label="Classification NN")

plt.grid(True)
\

# ラベル　

plt.xlabel("$k$", fontsize=24)
# plt.ylabel("$u$", fontsize=24)
plt.ylabel("$u$", fontsize=24)
# plt.legend(loc='best')


# fig, ax = plt.subplots(2, 1)
# # time= np.arange(0, simutime, Ts)

# # 目盛を内側に
# ax[0].tick_params(direction='in')
# ax[1].tick_params(direction='in')


# plt.rcParams["font.family"] = "Times New Roman"
# plt.rcParams["mathtext.fontset"] = "stix"
# plt.rcParams["font.size"] = 10
# plt.rcParams['axes.linewidth'] = 1.0# 軸の線幅edge linewidth。囲みの太さ


# ax[0].plot(rx0, ls="-", color="b")
# ax[1].plot(ru, ls="-", color="g")

# # ax[1].plot(time, rx1, ls="-", label="Classification")

# # ax[2].plot(time, ru, ls="-", label="Classification")

# # plt.plot(time, noiseLi, label="noise")
# # plt.ylim(-5.0, 5.0)

# # 凡例・グリッド
# # plt.legend(loc='upper right', borderaxespad=0)
# ax[0].grid(True)
# ax[1].grid(True)
# # ax[0].ylim(-2.0, 2.0)
# # ax[1].ylim(-2.0, 2.0)
# # ax[1].legend(loc='upper right', borderaxespad=0)
# # ax[1].grid(True)
# # ax[2].legend(loc='lower right', borderaxespad=0)
# # ax[2].grid(True)

# # ラベル　

# ax[0].set_xlabel("$k$", fontsize=18)
# ax[0].set_ylabel("$x$", fontsize=18)
# ax[1].set_xlabel("$k$", fontsize=18)
# ax[1].set_ylabel("$u$", fontsize=18)


fig.tight_layout()
plt.show()

stop = [i for i in range(len(ru)) if abs(ru[i])<=0.01]
stopRate = 100 * (len(stop)/len(ru))
print(stopRate)
print(l2norm)
print(t2 - t1)


